#!/usr/bin/env bash

set -e

BASE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

cd "${BASE_DIR}"

if [[ $(which python) == *"dotfiles/venv"* ]]; then
    echo "venv was already activated"
elif test -f "venv/bin/activate"; then
    source venv/bin/activate
fi
if [[ $(which python) == *"dotfiles/venv"* ]]; then
    echo "venv was activated"
else
    rm -rf ./venv
    python3 -m venv venv || sudo apt install -y python3-venv || python3 -m venv venv
    echo "venv was recreated"
    source venv/bin/activate
    echo "venv was activated"
    pip install pyyaml
    echo "pyyaml was installed"
fi
if [[ $(which python) != *"dotfiles/venv"* ]]; then
    echo "throw up your mac"
    exit
fi

git submodule update --init --recursive --remote


OS_DIR="os/ubuntu"
PROFILE="${OS_DIR}/profile"

while IFS= read -r configurator; do
    CONFIGURATORS+=" ${configurator}"
done < "${PROFILE}"

for configurator in ${@}; do
    CONFIGURATORS+=" ${configurator}"
done


META_DIR="meta"

BASE_CONFIGURATOR="${BASE_DIR}/${META_DIR}/base.yaml"

PACKAGE_MANAGER_PLUGIN="${OS_DIR}/dotbot-aptget"

DOTBOT_DIR="dotbot"
DOTBOT_BIN="bin/dotbot"


for config in ${CONFIGURATORS}; do
    echo -e "\nConfigure $config"
    # create temporary file
    configFile="$(mktemp)"
    suffix="-sudo"
    CONFIGURATOR="${BASE_DIR}/${META_DIR}/configurators/${config%"$suffix"}.yaml"

    echo -e "$(<$BASE_CONFIGURATOR)\n$(<$CONFIGURATOR)" > "$configFile"

    if [[ $config == *"aptget"* ]]; then
        cmd=("${BASE_DIR}/${META_DIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" -d "${BASE_DIR}" --plugin-dir ${PACKAGE_MANAGER_PLUGIN} -c "$configFile")
    else
        cmd=("${BASE_DIR}/${META_DIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" -d "${BASE_DIR}" -c "$configFile")
    fi

    if [[ $config == *"sudo"* ]]; then
        cmd=(sudo "${cmd[@]}")
    fi

    "${cmd[@]}"
    rm -f "$configFile"
done

cd "${BASE_DIR}"
